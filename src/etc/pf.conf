#	$OpenBSD: pf.conf,v 1.55 2017/12/03 20:40:04 sthen Exp $
#
# See pf.conf(5) and /etc/examples/pf.conf

# read the log file: tcpdump -n -e -ttt -r /var/log/pflog
# real-time logging: tcpdump -neq -ttt -i pflog0
#                    tcpdump -nettti pflog0 action drop
#		     tcpdump -vvopn -i enc0
# show queue: pfctl -vvs queue
#             systat queues
# show stats: pfctl -s info
#             systat pf
# show states: pfctl -s states
#              systat states
# table stats: pfctl -v -t martians -T show
# show rule nr. 4: pfctl -v -s rules -R 4
# show rules, prepend rule numbers: pfctl -a '*' -vvsr
#                                   systat rules
# show limits: pfctl -s memory

# https://www.iana.org/assignments/iana-ipv4-special-registry/
# https://www.iana.org/assignments/iana-ipv6-special-registry/
table <martians> const persist counters { \
 0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16 \
 172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 192.168.0.0/16 198.18.0.0/15 \
 198.51.100.0/24 203.0.113.0/24 240.0.0.0/4 255.255.255.255/32 \
 ::1/128 ::/128 ::/96 ::ffff:0:0/96 100::/64 2001::/32 2001:2::/48 \
 2001:db8::/32 fc00::/7 }

# Bad hosts
table <ban> persist counters file "/etc/pf.conf.table.ban"

# fuzzy_check (server:port) rspamd.com:11335
table <rspamd> { 88.99.142.95 }
fuzzy = "11335"

# Options
set loginterface egress
set optimization normal
set block-policy drop
set syncookies adaptive (start 25%, end 12%)
set skip on { lo0 }

# Queue - HFSC with FQ-CoDel (reduce bufferbloat and achieve fairness)
# (!) specify the upper bound within 90-95% of the expected bandwidth (bit/s)
# (!) raise the default queue limit from 50 to 1024 (1:1 ratio with flows)
queue outq on vio0 bandwidth 750M max 750M flows 1024 qlimit 1024 default

# Sanitizing packet content
# no-df + random-id = unique IP identifiers
# max-mss must match net.inet.tcp.mssdflt in /etc/sysctl.conf
anchor "scrub" in {
 match in all scrub (no-df random-id max-mss 1440)
}

# Classification -- classify packets based on the defined firewall policy.

# Block spoofed traffic
antispoof log quick for { (egress) lo0 }

# Block undesirable traffic
anchor "block/all"
anchor "block/in-quick-scan" in proto tcp
anchor "block/in-quick-bad" in on egress
anchor "block/out-quick-bad" out on egress
load anchor "block" from "/etc/pf.conf.anchor.block"

# Explicit pass
anchor "external" on egress {

 # Outbound
 anchor out proto { tcp udp } from (egress) {
  # DNS
  pass log (user) proto { tcp udp } \
   to port domain \
   tag SELF_INET

  # NTP
  pass log (user) proto udp \
   to port ntp \
   user { _ntp root } \
   tag SELF_INET

  # DHCP
  pass log (user) proto udp \
   from port bootpc to port bootps \
   tag SELF_INET

  # FUZZY
  pass log (user) proto udp \
   to <rspamd> port $fuzzy \
   user _rspamd \
   tag SELF_INET

  # WWW
  pass log (user) proto tcp \
   to port { http https } \
   user { _ntp _pfetch _pkgfetch _relayd _syspatch _rspamd root janitor } \
   tag SELF_INET

  # SSH, WHOIS
  pass log (user) proto tcp \
   to port { ssh whois } \
   user { root janitor dsync } \
   tag SELF_INET

  # MTA (!) "log" for spamlogd
  pass log proto tcp \
   to port { smtp smtps } \
   user { _smtpd _spamd } \
   tag SELF_INET

  # MUA
  pass log proto tcp \
   to port imaps \
   user _dovenull \
   tag SELF_INET
 }

 # Inbound
 anchor in proto { tcp udp } to (egress) {
  # WWW
  pass log proto tcp \
   to port { http https } \
   keep state (max 500, max-src-conn-rate 100/10) \
   tag INET_SELF

  # SSH
  pass log proto tcp \
   to port ssh \
   keep state (max-src-conn-rate 100/10) \
   tag INET_SELF

  # MTA
  pass log proto tcp \
   to port smtp \
   tag INET_SELF

  # MSA and MUA
  pass log proto tcp \
   to port { submission imaps } \
   keep state (max-src-conn-rate 100/10) \
   tag INET_SELF
 }

} # "external" end

# ICMP and ICMP6
anchor "icmp/ipv4-icmp" inet proto icmp
anchor "icmp/ipv6-icmp" inet6 proto icmp6
load anchor "icmp" from "/etc/pf.conf.anchor.icmp"

